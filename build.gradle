plugins {
    id 'application'
    id 'eclipse'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.23.8'
    id "de.undercouch.download" version "4.0.0"
}

// Application Configuration
ext {
    appName       = "CentraflexMobile"
    appLauncher   = "CentraflexMobile"
    appPackaging  = "Plusnet GmbH"
     appModuleName = "cfxmobile"
    appMainClass  = "de.plusnet.centraflex.mobile.CFXMobileMain"
    profile = findProperty('profile') ?: 'development'    
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://nexus.gluonhq.com/nexus/content/repositories/releases/' }
    maven { url 'https://rpgframework.jfrog.io/artifactory/RPGFramework' }
    maven { 
    	credentials {
            username "spr-plusnet"
            password System.getenv("ACCESS_TOKEN")
      }
    	url 'https://maven.pkg.github.com/spr-plusnet/libxsi'
    }
    maven {
    	credentials {
            username "spr-plusnet"
            password System.getenv("ACCESS_TOKEN")
      }
    	url 'https://maven.pkg.github.com/spr-plusnet/client-framework' 
    }
}

dependencies {
    implementation "org.apache.logging.log4j:log4j-api:2.13.3"
    implementation "org.prelle:javafx-extensions:5.0.0-SNAPSHOT"
    implementation "de.centraflex:telephony-api:0.0.1-SNAPSHOT"
    implementation "de.plusnet.centraflex:libxsi:2020.07"
    implementation "de.centraflex:callcontrol-xsi:0.0.1-SNAPSHOT"
    implementation "de.centraflex:contacts-xsi:0.0.1-SNAPSHOT"
    implementation "de.centraflex:telephony-xsi:0.0.1-SNAPSHOT"
    runtimeOnly "jakarta.xml.bind:jakarta.xml.bind-api:3.0.1"
    runtimeOnly "org.glassfish.jaxb:jaxb-runtime:3.0.1"
    runtimeOnly ("com.sun.mail:javax.mail:1.6.2") {
       exclude group: "javax.activation"
    }
    implementation "com.gluonhq.attach:settings:4.0.11:desktop"
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

javafx {
    version = '16'
    modules = ['javafx.controls', 'javafx.media', 'javafx.fxml']
}

sourceCompatibility = 11
targetCompatibility = 11

version=rootProject.file('version.txt').text.trim()

//mainClassName = "${ext.appModuleName}/${ext.appMainClass}"
mainClassName = "${ext.appMainClass}"

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

jar {
    manifest {
        attributes( 
          'Main-Class': mainClassName,
          'Implementation-Vendor': 'Plusnet GmbH',
          'Implementation-Version': archiveVersion
          )
    }
}

ext.os = org.gradle.internal.os.OperatingSystem.current()

application {
   mainModule    = "cfxmobile"
    executableDir = ""
    applicationDefaultJvmArgs = [ "-Dprism.allowhidpi=false",
                                  "-Dglass.win.uiScale=96dpi"]
    if (profile == 'development') {
      applicationDefaultJvmArgs = [ "-Dprism.allowhidpi=false",
                                  "-Dglass.win.uiScale=96dpi",
                                  "-Dprofile=development"]
    } else
    if (profile == 'staging') {
      applicationDefaultJvmArgs = [ "-Dprism.allowhidpi=false",
                                  "-Dglass.win.uiScale=96dpi",
                                  "-Dprofile=staging"]
    } else
    if (profile == 'release') {
      applicationDefaultJvmArgs = [ "-Dprism.allowhidpi=false",
                                  "-Dglass.win.uiScale=96dpi",
                                  "-Dprofile=release"]
    }
}

jlink {
    imageZip = project.file("${buildDir}/distributions/CentraflexMobile-${version}-${javafx.platform.classifier}.zip")
    imageDir = project.file("${buildDir}/CentraflexMobile-${version}")
    options = ['--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${appLauncher}"
        jvmArgs = ["-Dapplication.version=$version","-Dprofile=release"]
    }
    forceMerge('log4j-api', 'jaxb', 'jakarta.xml.bind-api', 'jaxb-runtime')
    // Herausgefunden mit ./gradlew suggestMergedModuleInfo
    // und dann eine provides-Zeile entfernt
		mergedModule {
    requires 'jakarta.activation';
    requires 'java.logging';
    requires 'java.security.sasl';
    requires 'java.xml';
    requires 'com.sun.istack.runtime';
    requires 'com.sun.xml.txw2';
    requires 'java.desktop';
    requires 'java.datatransfer';
    requires 'java.compiler';
    uses 'org.apache.logging.log4j.util.PropertySource';
    uses 'javax.mail.Provider';
    uses 'org.apache.logging.log4j.spi.Provider';
    uses 'org.apache.logging.log4j.message.ThreadDumpMessage.ThreadInfoFactory';
    provides 'org.apache.logging.log4j.util.PropertySource' with 'org.apache.logging.log4j.util.EnvironmentPropertySource',
                                'org.apache.logging.log4j.util.SystemPropertiesPropertySource';
    provides 'javax.mail.Provider' with 'com.sun.mail.imap.IMAPProvider',
                                'com.sun.mail.imap.IMAPSSLProvider',
                                'com.sun.mail.pop3.POP3Provider',
                                'com.sun.mail.pop3.POP3SSLProvider',
                                'com.sun.mail.smtp.SMTPProvider',
                                'com.sun.mail.smtp.SMTPSSLProvider';
    }
    
    jpackage {
				//jpackageHome = '/usr/lib/jvm/java-16-openjdk-16.0.1.0.9-1.rolling.fc33.x86_64/'
        if(os.macOsX) {
            installerOptions = [
            	  '--mac-package-identifier', 'de.plusnet.CentraflexMobile',
            	  '--mac-package-name', 'Centraflex Mobile'
//                '--mac-sign',
//                '--mac-signing-key-user-name', System.getenv('SIGNING_KEY_USER_NAME'),
//                '--mac-signing-keychain', System.getenv('SIGNING_KEYCHAIN_PATH')
            ]
        } else if(os.windows) {
        	  resourceDir= file("src/main/deploy/package/windows")
            installerType = 'msi' 
            installerOptions = [
            	'--win-per-user-install', 
            	'--win-menu', 
            	'--win-menu-group','Centraflex',
            	'--win-dir-chooser',
            	'--win-shortcut', 
            	'--verbose',            	
            	'--win-upgrade-uuid', '393f86d5-b735-4391-96b7-2b0d27cdf534']
            imageOptions = ['--icon','src/main/deploy/package/windows/Genesis.ico']
         } else {
        	  resourceDir= file("src/main/deploy/package/linux")
            installerType = '' // 'rpm'
            installerOptions = [
                '--linux-menu-group', 'Centraflex', 
                '--linux-app-category', 'Game',
                '--linux-shortcut',
                '--linux-deb-maintainer', 'stefan.prelle@plusnet.de',
                ]
            imageOptions += ['--icon', 'src/main/deploy/package/linux/CFXMobile.png']
        }
        installerOptions += [
            "--verbose",
            "--app-version", project.version,
            "--copyright", "Plusnet GmbH",
            "--description", "A softclient for the Plusnet Centraflex product",
            "--vendor", "Plusnet GmbH",
            "--name", "Centraflex Mobile"
        ]
    }
}


// #### The code below is needed only if you use the downloadJPackage() method to install the jpackage tool ####

eclipse {
    classpath {
        containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
        file {
            whenMerged {
                entries.findAll { it.properties.kind.equals('lib') && !it.properties.path.contains("junit") }.each {
                    it.entryAttributes['module'] = 'true'
                }
                entries.findAll { it.properties.path.startsWith('org.eclipse.jdt.launching.JRE_CONTAINER') }.each {
                    it.entryAttributes['module'] = 'true'
                }

            }
        }
    }
}
